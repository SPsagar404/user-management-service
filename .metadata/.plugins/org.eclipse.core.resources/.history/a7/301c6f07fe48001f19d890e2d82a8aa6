package com.user.app.service;

import java.util.Arrays;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.security.core.authority.SimpleGrantedAuthority;
import org.springframework.security.core.userdetails.UserDetails;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.core.userdetails.UsernameNotFoundException;

import com.user.app.exception.UserNotFoundException;
import com.user.app.model.User;
import com.user.app.repository.IUserRepository;

public class UserServiceImpl implements IUserService,UserDetailsService {
	
	@Autowired
	private IUserRepository repository;

	

	@Override
	public User findUserByUserName(String username) throws UserNotFoundException {
		Optional<User> user = repository.findByUsername(username);
		if(user.isEmpty()) {
			throw new UserNotFoundException(username);
		}
		return user.get();
	}
	
	
	@Override
	public UserDetails loadUserByUsername(String username) throws UsernameNotFoundException {
		
		User user = findUserByUserName(username);
		return new org.springframework.security.core.userdetails.User(user.getUsername(),user.getPassword(),Arrays.asList(user.getRole()).stream().map(role->new SimpleGrantedAuthority(role.name())).collect(Collectors.toList()));
	}

}
